using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace OkulOtomasyon
{
    public partial class SinifIslemi : Form
    {
        MySqlConnection connection = new MySqlConnection("Server=localhost;Database=okulotomasyon;Uid=root;Pwd=ulwus123;");

        public SinifIslemi()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();

        }
        public void Listele()
        {
            string komut = "SELECT * FROM sinif";
            MySqlDataAdapter da = new MySqlDataAdapter(komut, connection);
            DataSet ds = new DataSet();
            da.Fill(ds);
            gridControl1.DataSource = ds.Tables[0];
        }

        public void Ekle()
        {
            try
            {
                if (connection.State != ConnectionState.Open)
                {
                    connection.Open();
                }

                using (MySqlCommand cmd = new MySqlCommand(
                    "INSERT INTO sinif (sinifName, sinifStudentNumber, sinifYear) VALUES (@sinifName, @sinifStudentNumber, @sinifYear)",
                    connection))
                {
                    cmd.Parameters.AddWithValue("@sinifName", textEdit1.Text);
                    cmd.Parameters.AddWithValue("@sinifStudentNumber", textEdit2.Text);
                    cmd.Parameters.AddWithValue("@sinifYear", textEdit1.Text[0]);

                    cmd.ExecuteNonQuery();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Hata: " + ex.Message);
            }
            finally
            {
                connection.Close();
                Listele();
            }
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            Ekle();
        }

        private void Sinifİslemi_Load(object sender, EventArgs e)
        {
            Listele();
        }

        public void Guncelle()
        {
            try
            {
                if (connection.State != ConnectionState.Open)
                {
                    connection.Open();
                }

                var id = gridView1.GetFocusedRowCellValue("sinifID")?.ToString();
                if (string.IsNullOrEmpty(id))
                {
                    MessageBox.Show("Lütfen güncellenecek sınıfı seçin.");
                    return;
                }

                string updateQuery = @"UPDATE sinif SET 
            sinifName = @sinifName,
            sinifStudentNumber = @sinifStudentNumber,
            sinifYear = @sinifYear
            WHERE sinifID = @sinifID";

                using (MySqlCommand cmd = new MySqlCommand(updateQuery, connection))
                {
                    cmd.Parameters.AddWithValue("@sinifID", id);
                    cmd.Parameters.AddWithValue("@sinifName", textEdit1.Text);
                    cmd.Parameters.AddWithValue("@sinifStudentNumber", textEdit2.Text);
                    cmd.Parameters.AddWithValue("@sinifYear", textEdit1.Text[0]);


                    cmd.ExecuteNonQuery();
                    MessageBox.Show("Sınıf bilgileri başarıyla güncellendi.");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Güncelleme sırasında hata: " + ex.Message);
            }
            finally
            {
                connection.Close();
                Listele();
            }
        }

        public void Sil()
        {
            try
            {
                if (connection.State != ConnectionState.Open)
                {
                    connection.Open();
                }

                string id = gridView1.GetFocusedRowCellValue("sinifID").ToString();

                if (string.IsNullOrEmpty(id))
                {
                    MessageBox.Show("Geçerli Bir Sınıf Seç");
                    return;
                }

                using (MySqlCommand cmd = new MySqlCommand("DELETE FROM sinif WHERE sinifID = @sinifID", connection))
                {
                    cmd.Parameters.AddWithValue("@sinifID", id);
                    cmd.ExecuteNonQuery();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Silme sırasında hata: " + ex.Message);
            }
            finally
            {
                connection.Close();
                Listele();
            }
        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            DialogResult onay = MessageBox.Show("Silmek İstediğinden Emin Misin?", "Onay Kutusu", MessageBoxButtons.YesNo, MessageBoxIcon.Information);
            if (onay == DialogResult.Yes)
            {
                Sil();
            }
        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            Guncelle();
        }



        private void simpleButton2_Click_1(object sender, EventArgs e)
        {
            DialogResult onay = MessageBox.Show("Silmek İstediğinden Emin Misin?", "Onay Kutusu", MessageBoxButtons.YesNo, MessageBoxIcon.Information);
            if (onay == DialogResult.Yes)
            {
                Sil();
            }
        }

        private void simpleButton3_Click_1(object sender, EventArgs e)
        {
            Guncelle();
        }

        private void gridControl1_Click_2(object sender, EventArgs e)
        {
            textEdit1.Text = gridView1.GetFocusedRowCellValue("sinifName")?.ToString() ?? string.Empty;
            textEdit2.Text = gridView1.GetFocusedRowCellValue("sinifStudentNumber")?.ToString() ?? string.Empty;
        }
    }
}
