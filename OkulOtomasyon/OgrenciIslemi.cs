using MySql.Data.MySqlClient;
using System;
using System.Data;
using System.Windows.Forms;

namespace OkulOtomasyon
{
    public partial class OgrenciIslemi : Form
    {
        MySqlConnection connection = new MySqlConnection("Server=localhost;Database=okulotomasyon;Uid=root;Pwd=ulwus123;");

        public OgrenciIslemi()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource2.FillAsync();
        }

        private void xtraTabPage1_Paint(object sender, PaintEventArgs e)
        {
        }

        private void label1_Click(object sender, EventArgs e)
        {
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            Ekle();
        }

        private void comboBoxEdit1_SelectedIndexChanged(object sender, EventArgs e)
        {


        }

        private void richEditControl1_Click(object sender, EventArgs e)
        {
        }

        public void Listele()
        {
            string komut = "SELECT * FROM ogrenci";
            MySqlDataAdapter da = new MySqlDataAdapter(komut, connection);
            DataSet ds = new DataSet();
            da.Fill(ds);
            gridControl1.DataSource = ds.Tables[0];
            OgrenciDoldur();
        }

        public void OgrenciDoldur()
        {
            string komut = "Select * from sinif";
            MySqlDataAdapter daSinif = new MySqlDataAdapter(komut, connection);
            DataTable dtSinif = new DataTable();
            daSinif.Fill(dtSinif);
            comboBox1.DataSource = dtSinif;
            comboBox1.DisplayMember = "sinifName";
            comboBox1.ValueMember = "sinifID";
        }

        public int GetOgrenciSayisi()
        {
            if (connection.State != ConnectionState.Open)
            {
                connection.Open();
            }
            string sinifKontrolQuery = "SELECT COUNT(*) as ogrenciSayisi FROM ogrenci WHERE ogrenciSinif = @sinifID";
            MySqlCommand sinifKontrolCommand = new MySqlCommand(sinifKontrolQuery, connection);
            sinifKontrolCommand.Parameters.AddWithValue("@sinifID", comboBox1.SelectedValue);

            return Convert.ToInt32(sinifKontrolCommand.ExecuteScalar());


        }

        public void Ekle()
        {
            try
            {
                if (connection.State != ConnectionState.Open)
                {
                    connection.Open();
                }

                int ogrenciSayisi;
                int sinifKapasite;

                // İlk sorgu: Sınıf kapasitesi kontrolü
                using (MySqlCommand command = new MySqlCommand("SELECT sinifStudentNumber FROM sinif WHERE sinifID = @sinifID", connection))
                {
                    command.Parameters.AddWithValue("@sinifID", comboBox1.SelectedValue);
                    using (MySqlDataReader dr = command.ExecuteReader())
                    {
                        if (!dr.Read())
                        {
                            MessageBox.Show("Sınıf bulunamadı!");
                            return;
                        }
                        sinifKapasite = Convert.ToInt32(dr["sinifStudentNumber"]);
                    }
                }

                ogrenciSayisi = GetOgrenciSayisi();

                if (sinifKapasite <= ogrenciSayisi)
                {
                    MessageBox.Show("Sınıf Dolu!");
                    return;
                }


                int ogrenciID = -1;

                // Öğrenci ekleme
                using (MySqlCommand cmd = new MySqlCommand(
                    "INSERT INTO ogrenci (ogrenciIsmi, ogrenciSoyismi, ogrenciYili, ogrenciDogumYili, ogrenciSinif, ogrenciVeliIsmi, ogrenciVeliTel) VALUES " +
                    "(@ogrenciIsmi, @ogrenciSoyismi, @ogrenciYili, @ogrenciDogumYili, @ogrenciSinif, @ogrenciVeliIsmi, @ogrenciVeliTel); SELECT LAST_INSERT_ID();",
                    connection))
                {
                    cmd.Parameters.AddWithValue("@ogrenciIsmi", textEdit1.Text);
                    cmd.Parameters.AddWithValue("@ogrenciSoyismi", textEdit2.Text);
                    cmd.Parameters.AddWithValue("@ogrenciYili", textEdit3.Text);
                    cmd.Parameters.AddWithValue("@ogrenciDogumYili", dateEdit1.Text);
                    cmd.Parameters.AddWithValue("@ogrenciSinif", comboBox1.SelectedValue);
                    cmd.Parameters.AddWithValue("@ogrenciVeliIsmi", textEdit6.Text);
                    cmd.Parameters.AddWithValue("@ogrenciVeliTel", textEdit7.Text);

                    // ExecuteScalar, son eklenen ID'yi almak için kullanılıyor
                    ogrenciID = Convert.ToInt32(cmd.ExecuteScalar());
                }

                // Account kaydı ekleme
                using (MySqlCommand cmdAccount = new MySqlCommand(
                    "INSERT INTO account (userName, userPassword, userPermission, userAttachID) VALUES " +
                    "(@userName, @userPassword, @userPermission, @userAttachID)", connection))
                {
                    cmdAccount.Parameters.AddWithValue("@userName", textEdit7.Text);
                    cmdAccount.Parameters.AddWithValue("@userPassword", "123456");
                    cmdAccount.Parameters.AddWithValue("@userPermission", 0);
                    cmdAccount.Parameters.AddWithValue("@userAttachID", ogrenciID);

                    cmdAccount.ExecuteNonQuery();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Hata: " + ex.Message, "Hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                connection.Close();
                Listele();
            }
        }



        public void Guncelle()
        {
            try
            {
                if (connection.State != ConnectionState.Open)
                {
                    connection.Open();
                }

                var id = gridView1.GetFocusedRowCellValue("ogrenciID")?.ToString();
                if (string.IsNullOrEmpty(id))
                {
                    MessageBox.Show("Lütfen güncellenecek öğrenciyi seçin.");
                    return;
                }

                string updateQuery = @"UPDATE ogrenci SET 
            ogrenciIsmi = @ogrenciIsmi,
            ogrenciSoyismi = @ogrenciSoyismi,
            ogrenciYili = @ogrenciYili,
            ogrenciDogumYili = @ogrenciDogumYili,
            ogrenciSinif = @ogrenciSinif,
            ogrenciVeliIsmi = @ogrenciVeliIsmi,
            ogrenciVeliTel = @ogrenciVeliTel
            WHERE ogrenciID = @ogrenciID";

                using (MySqlCommand cmd = new MySqlCommand(updateQuery, connection))
                {
                    cmd.Parameters.AddWithValue("@ogrenciID", id);
                    cmd.Parameters.AddWithValue("@ogrenciIsmi", textEdit1.Text);
                    cmd.Parameters.AddWithValue("@ogrenciSoyismi", textEdit2.Text);
                    cmd.Parameters.AddWithValue("@ogrenciYili", textEdit3.Text);
                    cmd.Parameters.AddWithValue("@ogrenciDogumYili", dateEdit1.Text);
                    cmd.Parameters.AddWithValue("@ogrenciSinif", comboBox1.SelectedValue);
                    cmd.Parameters.AddWithValue("@ogrenciVeliIsmi", textEdit6.Text);
                    cmd.Parameters.AddWithValue("@ogrenciVeliTel", textEdit7.Text);

                    cmd.ExecuteNonQuery();
                    MessageBox.Show("Öğrenci bilgileri başarıyla güncellendi.");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Güncelleme sırasında hata: " + ex.Message);
            }
            finally
            {
                connection.Close();
                Listele(); // Tabloyu yenile
            }
        }

        public void Sil()
        {
            try
            {


                if (connection.State != ConnectionState.Open)
                {
                    connection.Open();
                }

                string id = gridView1.GetFocusedRowCellValue("ogrenciID").ToString();

                if (string.IsNullOrEmpty(id))
                {
                    MessageBox.Show("Geçerli Bir Öğrenci Seç");
                    return;
                }
                Console.WriteLine(id);
                using (MySqlCommand cmd = new MySqlCommand("DELETE FROM ogrenci WHERE ogrenciID = @ogrenciID", connection))
                {
                    cmd.Parameters.AddWithValue("@ogrenciID", id);
                    cmd.ExecuteNonQuery();
                }

            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            finally
            {
                connection.Close();
                Listele();
            }
        }


        private void simpleButton2_Click(object sender, EventArgs e)
        {
            Guncelle();
        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            Sil();
        }

        private void OgrenciEkle_Load(object sender, EventArgs e)
        {
            Listele();
        }

        private void simpleButton2_Click_1(object sender, EventArgs e)
        {
            DialogResult onay = MessageBox.Show("Silmek İstediğinden Emin Misin?", "Onay Kutusu", MessageBoxButtons.YesNo, MessageBoxIcon.Information);
            if (onay == DialogResult.Yes)
            {
                Sil();
            }
        }

        private void simpleButton3_Click_1(object sender, EventArgs e)
        {
            Guncelle();
        }

        private void gridControl1_Click_1(object sender, EventArgs e)
        {
            if (gridView1.FocusedRowHandle >= 0)
            {
                try
                {

                    var veliIsmi = gridView1.GetFocusedRowCellValue("ogrenciVeliIsmi");
                    Console.WriteLine($"Çekilen Veli İsmi Değeri: {veliIsmi}");

                    // Detaylı null kontrolü
                    if (veliIsmi != null && veliIsmi != DBNull.Value)
                    {
                        textEdit6.Text = veliIsmi.ToString();
                    }
                    else
                    {
                        textEdit6.Text = string.Empty;
                        Console.WriteLine("Veli ismi null veya DBNull");
                    }



                    textEdit1.Text = gridView1.GetFocusedRowCellValue("ogrenciIsmi")?.ToString() ?? string.Empty;
                    textEdit2.Text = gridView1.GetFocusedRowCellValue("ogrenciSoyismi")?.ToString() ?? string.Empty;
                    textEdit3.Text = gridView1.GetFocusedRowCellValue("ogrenciYili")?.ToString() ?? string.Empty;
                    dateEdit1.Text = Convert.ToDateTime(gridView1.GetFocusedRowCellValue("ogrenciDogumYili"))
                                            .ToString("dd.MM.yyyy");
                    textEdit6.Text = gridView1.GetFocusedRowCellValue("ogrenciVeliİsmi")?.ToString() ?? string.Empty;
                    textEdit7.Text = gridView1.GetFocusedRowCellValue("ogrenciVeliTel")?.ToString() ?? string.Empty;
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Veri yükleme hatası: " + ex.Message);
                }
            }
        }

        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {

        }
    }
}